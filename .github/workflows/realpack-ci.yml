name: RealPack CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install libc++ on Ubuntu
      if: matrix.c_compiler == 'clang'
      run: sudo apt-get install libc++-dev libc++abi-dev

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S "${{ github.workspace }}/src"

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }} -T Test -T Coverage

    - name: Upload code coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.cpp_compiler }}
        path: |
          ${{ steps.strings.outputs.build-output-dir }}/**/*.o
          ${{ steps.strings.outputs.build-output-dir }}/**/*.gcno 
          ${{ steps.strings.outputs.build-output-dir }}/**/*.gcda
          ${{ steps.strings.outputs.build-output-dir }}/**/*.gcov
          ${{ steps.strings.outputs.build-output-dir }}/**/*.xml
          ${{ steps.strings.outputs.build-output-dir }}/**/*.html
          ${{ steps.strings.outputs.build-output-dir }}/**/*.txt
          ${{ steps.strings.outputs.build-output-dir }}/**/*.log
